<div>
                    <Grid container>
                        <Grid item xs={6} sm={6} md={6} lg={6}>
                            <header>
                                <h3>
                                    <strong>{currentUser.username}</strong> Profile
                                </h3>
                            </header>

                            {/* User name area */}
                            <Grid container className={classes.textbox}>
                                <Grid item xs={2} sm={2} md={2} lg={2}>
                                    <h5>Username:</h5>
                                </Grid>

                                <Grid item>
                                    <Controls.Input
                                        label="Username"
                                        placeholder="Username"
                                        value={currentUser.username}
                                        size="small"
                                        disabled={disableChangeUsername}
                                        //onChange={e => setEtl({...etl, name: e.target.value})}
                                    />
                                    {disableChangeUsername ? (
                                        <Controls.Button className={classes.iconButton} variant="outlined" color="inherit">
                                            <EditIcon onClick={() => setDisableChangeUsername(false)} />
                                        </Controls.Button>
                                    ) : (
                                        <Controls.Button className={classes.iconButton} variant="outlined" color="inherit">
                                            <SaveIcon onClick={() => changeEmail()} />
                                        </Controls.Button>
                                    )}
                                </Grid>
                            </Grid>

                            {/* Email area */}
                            <Grid container className={classes.textbox}>
                                <Grid item xs={2} sm={2} md={2} lg={2}>
                                    <h5>Email:</h5>
                                </Grid>

                                <Grid item>
                                    <Controls.Input
                                        label="Username"
                                        placeholder="Username"
                                        value={currentUser.email}
                                        size="small"
                                        disabled={disableChangeEmail}
                                        // onChange={e => setCurrentUser({...currentUser, email: e.target.value})}
                                    />
                                    {disableChangeEmail ? (
                                        <Controls.Button className={classes.iconButton} variant="outlined" color="inherit">
                                            <EditIcon onClick={() => setDisableChangeEmail(false)} />
                                        </Controls.Button>
                                    ) : (
                                        <Controls.Button className={classes.iconButton} variant="outlined" color="inherit">
                                            <SaveIcon
                                            //    onClick={() => changeEmail()}
                                            />
                                        </Controls.Button>
                                    )}
                                </Grid>
                            </Grid>
                        </Grid>

                        <Grid item xs={6} sm={6} md={6} lg={6}>
                            <TableContainer className={classes.table} component={Paper}>
                                <Table stickyHeader aria-label="customized table">
                                    <colgroup>
                                        <col style={{ width: "20%"}} />{/* ETL procedure name */}
                                        <col style={{ width: "16%"}} />{/* EHR database name */}
                                        <col style={{ width: "16%"}} />{/* OMOP CDM version */}
                                        <col style={{ width: "16%"}} />{/* Access button */}
                                    </colgroup>
                                    <TableHead>
                                        <TableRow>
                                            <StyledTableCell align="left">Name</StyledTableCell>

                                            <StyledTableCell align="left">EHR Database</StyledTableCell>

                                            <StyledTableCell align="left">OMOP CDM</StyledTableCell>

                                            <StyledTableCell />
                                        </TableRow>
                                    </TableHead>

                                    <TableBody>
                                        {procedures.map((procedure, i) => {
                                            return(
                                                <StyledTableRow key={i}>
                                                    <StyledTableCell component="th" scope="row">
                                                        {procedure.name}
                                                    </StyledTableCell>

                                                    <StyledTableCell component="th" scope="row" align="left">
                                                        {procedure.ehrDatabase.databaseName}
                                                    </StyledTableCell>

                                                    <StyledTableCell component="th" scope="row" align="left">
                                                        {CDMVersions.filter(function(cdm) { return cdm.id === procedure.omopDatabase.databaseName })[0].name}
                                                    </StyledTableCell>

                                                    <StyledTableCell component="th" scope="row" align="center">
                                                        <Controls.Button
                                                            text="Access"
                                                            onClick={() => accessETLProcedure(procedure.id)}
                                                        />
                                                    </StyledTableCell>
                                                </StyledTableRow>
                                            )
                                        })}
                                    </TableBody>
                                </Table>
                            </TableContainer>
                        </Grid>
                    </Grid>
                </div>